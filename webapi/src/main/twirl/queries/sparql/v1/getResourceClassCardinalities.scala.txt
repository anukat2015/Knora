@*
 * Copyright © 2015 Lukas Rosenthaler, Benjamin Geer, Ivan Subotic,
 * Tobias Schweizer, André Kilchenmann, and André Fatton.
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI

@**
 * Gets information about the cardinalities of resource classes.
 *
 * @param triplestore the name of the triplestore being used.
 * @param entityIris a list of IRIs of resource classes to get information about.
 *@
@(triplestore: String,
  entityIris: Seq[IRI])

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX knora-base: <http://www.knora.org/ontology/knora-base#>

SELECT ?s ?cardinalityProp ?cardinality ?cardinalityVal ?isKnoraValueProp ?isLinkProp ?isLinkValueProp ?isFileValueProp
@* Ensure that inference is not used in this query. *@
@if(triplestore.startsWith("graphdb")) {
    FROM <http://www.ontotext.com/explicit>
}
WHERE {
    @for((entityIri, index) <- entityIris.zipWithIndex) {
        @if(index > 0) {
            UNION
        }

        {
            BIND(IRI("@entityIri") as ?s)
            ?s rdfs:subClassOf* ?class .
            ?class rdfs:subClassOf ?restriction .
            ?restriction a owl:Restriction .
            ?restriction owl:onProperty ?cardinalityProp .
            ?restriction ?cardinality ?cardinalityVal .
            FILTER(?cardinality = owl:cardinality || ?cardinality = owl:minCardinality || ?cardinality = owl:maxCardinality)

            OPTIONAL {
                ?cardinalityProp rdfs:subPropertyOf+ knora-base:hasValue .
                BIND(true as ?isKnoraValueProp)
            }

            OPTIONAL {
                ?cardinalityProp rdfs:subPropertyOf* knora-base:hasLinkTo .
                BIND(true as ?isLinkProp)
            }

            OPTIONAL {
                ?cardinalityProp rdfs:subPropertyOf* knora-base:hasLinkToValue .
                BIND(true as ?isLinkValueProp)
            }

            OPTIONAL {
                ?cardinalityProp rdfs:subPropertyOf* knora-base:hasFileValue .
                BIND(true as ?isFileValueProp)
            }

            @*

            Allow a subclass to override a cardinality in a superclass. For example, suppose that:

            * knora-base:Representation has a cardinality for knora-base:hasFileValue.
            * knora-base:StillImageRepresentation is a subclass of knora-base:Representation and has a cardinality for
              knora-base:hasStillImageFileValue, which is a subproperty of knora-base:hasFileValue.
            * incunabula:page is a subclass of knora-base:StillImageRepresentation.

            The cardinalities for incunabula:page should include knora-base:hasStillImageFileValue, but not
            knora-base:hasFileValue.

            This works as follows: we were given ?s (incunabula:page), and we are looking at one of its superclasses ?class
            (knora-base:Representation). We find that ?class has some ?cardinalityProp (knora-base:hasFileValue). We then
            find that there exists ?otherClass (knora-base:StillImageRepresentation) that has a cardinality for ?otherProperty
            (knora-base:hasStillImageFileValue), which is a subproperty of ?cardinalityProp. Therefore we exclude the
            cardinality on ?cardinalityProp from the results.

            *@

            MINUS {
                BIND(IRI("@entityIri") as ?s)
                ?s rdfs:subClassOf* ?otherClass .
                ?otherClass rdfs:subClassOf+ ?class .
                ?otherClass rdfs:subClassOf ?otherRestriction .
                ?otherRestriction a owl:Restriction .
                ?otherRestriction owl:onProperty ?otherProperty .
                ?otherProperty rdfs:subPropertyOf* ?cardinalityProp .
            }
        }
    }
}
