@*
 * Copyright © 2015 Lukas Rosenthaler, Benjamin Geer, Ivan Subotic,
 * Tobias Schweizer, André Kilchenmann, and André Fatton.
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI

@**
 * Queries a knora-base:Value.
 *
 * @param triplestore the name of the triplestore being used.
 * @param iri the IRI of the Value.
 *@
@(triplestore: String,
  valueIri: IRI)

prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix knora-base: <http://www.knora.org/ontology/knora-base#>

SELECT ?objPred ?objObj ?predStandoff ?objStandoff
@* Ensure that inference is not used in this query. *@
@if(triplestore.startsWith("graphdb")) {
    FROM <http://www.ontotext.com/explicit>
}
WHERE {
    BIND(IRI("@valueIri") AS ?obj)

    ?resource ?resourceProp ?obj .
    ?resourceProp rdfs:subPropertyOf+ knora-base:hasValue .

    {
        ?obj ?objPred ?objObj .

        FILTER(?objPred != knora-base:attachedToProject)

        OPTIONAL {
            ?objPred rdfs:subPropertyOf* knora-base:valueHasStandoff .
            ?objObj ?predStandoff ?objStandoff .
        }
    }
    UNION
    {
        @* Return the value's project if it has one, otherwise return the project of the resource that contains the value. *@

        ?resource ?resourceProp ?obj . @* TODO: Why do we need this here? (Issue 235) *@
        ?resource knora-base:attachedToProject ?resourceProject .

        OPTIONAL {
            ?obj knora-base:attachedToProject ?valueProject .
        }

        BIND(knora-base:attachedToProject AS ?objPred)
        BIND(COALESCE(?valueProject, ?resourceProject) AS ?objObj)
    }

    MINUS {
        ?obj knora-base:isDeleted true .
    }
}
